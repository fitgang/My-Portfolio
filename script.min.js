function removeHeader(){const e=document.querySelector(".header");e.classList.remove("show-header");const t=document.querySelector("#return");t.style.display="none";const o=e.lastElementChild.children;[t,...o].forEach(e=>e.removeEventListener("click",removeHeader)),[...o].forEach(e=>e.removeEventListener("keydown",setFocusAndRemoveHeader))}function setFocusAndRemoveHeader(e){"Enter"==e.key&&(document.querySelector(e.target.hash).focus(),removeHeader())}function showHeader(){const e=document.querySelector(".header");e.classList.add("show-header");const t=document.querySelector("#return");setTimeout(()=>t.style.display="initial",500);const o=e.lastElementChild.children;[t,...o].forEach(e=>e.addEventListener("click",removeHeader)),[...o].forEach(e=>e.addEventListener("keydown",setFocusAndRemoveHeader))}function transformCube(e,t){let o=150;innerWidth<700&&(o=100);const r=document.querySelector(".projects-cube");r.style.transform=`rotateX(${e}deg) rotateY(${t}deg) translateZ(${o}px)`}function rotate(e){if(grab)return;let t=e.clientX,o=e.clientY;const r=Math.round(secP.clientWidth/900*100)/100,n=Math.round(secP.clientHeight/900*100)/100;transformCube(o*n,t*r)}function setTransition(e){const t=document.querySelector(".projects-cube");t.style.transition=e}function alignCube(e){const t=document.querySelectorAll(".projects")[e].querySelector(".description");if(t.classList.contains("show-description"))return;grab=!0;const o=[[-5,175],[85,0],[265,0],[-5,-95],[175,-85],[175,185]];setTransition("transform 0.5s ease-in-out"),transformCube(o[e][0],o[e][1]),setTimeout(()=>setTransition(""),510);const r=document.querySelectorAll(".description");r.forEach(e=>{e.classList.contains("show-description")&&e.classList.remove("show-description")}),t.classList.add("show-description");const n=t.querySelector(".project-links");n&&n.focus()}const navBtn=document.querySelector(".nav-btn"),secP=document.getElementById("portfolio"),nums=document.querySelectorAll(".serial-num");let grab=!1;navBtn.addEventListener("click",showHeader),secP.addEventListener("mousemove",rotate),nums.forEach((e,t)=>{e.addEventListener("click",()=>alignCube(t)),e.addEventListener("keypress",e=>{"Enter"==e.key&&alignCube(t)})});const observer=new IntersectionObserver(e=>e.forEach(e=>{let t={home:"view-home","about-me":"view-about",portfolio:"view-portfolio"},o=t[e.target.id];e.isIntersecting&&(e.target.classList.add(o),observer.unobserve(e.target))}),{threshold:.2});["#home","#about-me","#portfolio"].forEach(e=>observer.observe(document.querySelector(e)));